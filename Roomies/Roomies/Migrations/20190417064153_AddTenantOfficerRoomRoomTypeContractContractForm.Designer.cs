// <auto-generated />
using System;
using EFGetStarted.AspNetCore.NewDb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Roomies.Migrations
{
    [DbContext(typeof(RoomiesContext))]
    [Migration("20190417064153_AddTenantOfficerRoomRoomTypeContractContractForm")]
    partial class AddTenantOfficerRoomRoomTypeContractContractForm
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.Apartment", b =>
                {
                    b.Property<long>("ApartmentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<long>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDateTime");

                    b.HasKey("ApartmentID");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.Contract", b =>
                {
                    b.Property<long>("RoomID");

                    b.Property<long>("TenantID");

                    b.Property<DateTime>("ContractEndDate");

                    b.Property<long>("ContractFormID");

                    b.Property<DateTime>("ContractStartDate");

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<decimal>("DepositAmount");

                    b.Property<DateTime>("DepositDateTime");

                    b.Property<int>("ElectricityStartUnit");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("MinimumMonth");

                    b.Property<long>("OfficerID");

                    b.Property<long>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDateTime");

                    b.Property<int>("WaterStartUnit");

                    b.HasKey("RoomID", "TenantID");

                    b.HasIndex("ContractFormID");

                    b.HasIndex("OfficerID");

                    b.HasIndex("TenantID");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.ContractForm", b =>
                {
                    b.Property<long>("ContractFormID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("Picture");

                    b.Property<long>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDateTime");

                    b.HasKey("ContractFormID");

                    b.ToTable("ContractForms");
                });

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.Officer", b =>
                {
                    b.Property<long>("OfficerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("ContactNumber");

                    b.Property<string>("ContactNumber2");

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Note");

                    b.Property<string>("PassPortNumber");

                    b.Property<string>("TaxIdentification");

                    b.Property<long>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDateTime");

                    b.HasKey("OfficerID");

                    b.ToTable("Officers");
                });

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.Room", b =>
                {
                    b.Property<long>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ApartmentID");

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsBeingRepaired");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsRepairRequired");

                    b.Property<string>("RoomNumber");

                    b.Property<long>("RoomTypeID");

                    b.Property<long>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDateTime");

                    b.HasKey("RoomID");

                    b.HasIndex("ApartmentID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.RoomType", b =>
                {
                    b.Property<long>("RoomTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("LateAllowedDayCount");

                    b.Property<decimal>("LatePaymentRatePerDay");

                    b.Property<string>("Name");

                    b.Property<decimal>("RoomRate");

                    b.Property<long>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDateTime");

                    b.HasKey("RoomTypeID");

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.Tenant", b =>
                {
                    b.Property<long>("TenantID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("ContactNumber");

                    b.Property<string>("ContactNumber2");

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Note");

                    b.Property<string>("PassPortNumber");

                    b.Property<string>("TaxIdentification");

                    b.Property<long>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDateTime");

                    b.HasKey("TenantID");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.Contract", b =>
                {
                    b.HasOne("EFGetStarted.AspNetCore.NewDb.Models.ContractForm", "ContractForm")
                        .WithMany("Contracts")
                        .HasForeignKey("ContractFormID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFGetStarted.AspNetCore.NewDb.Models.Officer", "Officer")
                        .WithMany()
                        .HasForeignKey("OfficerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFGetStarted.AspNetCore.NewDb.Models.Room", "Room")
                        .WithMany("Contracts")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFGetStarted.AspNetCore.NewDb.Models.Tenant", "Tenant")
                        .WithMany("Contracts")
                        .HasForeignKey("TenantID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.Room", b =>
                {
                    b.HasOne("EFGetStarted.AspNetCore.NewDb.Models.Apartment", "Apartment")
                        .WithMany("Rooms")
                        .HasForeignKey("ApartmentID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFGetStarted.AspNetCore.NewDb.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
